<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dq.aquaranth.dept.mapper.DeptMapper">


<!--    1개 조회-->
    <select id="select" resultType="com.dq.aquaranth.dept.dto.DeptDTO">
        select * from tbl_dept where dept_no = #{dept_no}
    </select>


<!--    등록-->

<!--    임의의 부서를 직접 추가-->
    <insert id="insert">
        <selectKey keyProperty="deptNo" order="AFTER" resultType="long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into  tbl_dept (upper_dept_no, company_no, dept_name, del_flag, main_flag, dept_desc,   depth, reg_user)
        values (#{upperDeptNo}, #{companyNo}, #{deptName}, #{delFlag}, #{mainFlag}, #{deptDesc},  #{depth}, #{regUser})
    </insert>

<!--    만든 함수를 이용해서 (상위부서 번호와 그룹번호를 사용)  ord값 조회-->
    <select id="getNextOrd" resultType="int">
        select FN_GET_DEPT_ORD(#{parentDeptNo},#{company})
    </select>

<!--    동일한 company를 가지는 부서중에 조회한 ord값 보다 크거나 같은 모든 ord를 1씩 추가-->
    <update id="arrangeOrd">
        update tbl_dept set ord = ord + 1 where company_no = #{company} and ord >=  #{ord}
    </update>

<!--    직접 추가한 부서에 위에서 조회한 ord값을 업데이트-->
    <update id="fixOrd">
        update tbl_dept set ord = #{ord} where dept_no = #{deptNo}
    </update>

<!--    추가한 부서의 dept_no를 상위 부서의 last_dno에 업데이트 -->
    <update id="updateLastDno">
        update tbl_dept set last_dno = #{deptNo} where dept_no = #{parentDeptNo}
    </update>



<!--    삭제-->
    <delete id="delete">
        delete from tbl_dept where dept_no = #{dept_no}
    </delete>


<!--    수정-->
    <update id="update">
            update tbl_dept
            set
            upper_dept_no = #{upper_dept_no},
            dept_name = #{dept_name},
            del_flag = #{del_flag},
            main_flag = #{main_flag},
            deptSort = #{deptSort},
            dept_desc = #{dept_desc},
            mod_date = now()
            where dept_no = #{dept_no}
    </update>



<!--    ===========================================-->

<!--    전체 리스트 조회-->
    <select id="getList" resultType="com.dq.aquaranth.dept.dto.DeptDTO">
        select * from tbl_dept order by dept_no asc limit #{skip}, #{size}
    </select>


<!--    회사별 리스트 조회-->
    <select id="getGnoList" resultType="com.dq.aquaranth.dept.dto.DeptDTO">
        select * from tbl_dept where company_no = #{companyNo} order by ord asc
    </select>



    <select id="getFromParent" resultType="com.dq.aquaranth.dept.dto.DeptDTO">
        select *
        from tbl_dept
        where (upper_dept_no = #{upperDeptNo} OR upper_dept_no is null )and depth = #{depth}
    </select>


<!--    트리 구조 조회-->
    <select id="getTree" resultType="com.dq.aquaranth.dept.dto.DeptTreeDTO">
        select
        dept_no, orga_no, dept_name, upper_dept_no, ord, depth, company_no, last_dno
        from
        v_dept_tree

        where company_no = #{company} order by ord
    </select>

    <insert id="insertOrga">
        insert into tbl_orga (upper_orga_no, orga_type, reg_user)
        values (#{orga}, 'dept' , #{regUser})
    </insert>

    <insert id="insertOrgaMapping">
        insert into tbl_dept_mapping (dept_no, orga_no, dept_main, reg_user)
        values (#{deptNo}, #{orgaNo}, '0', #{regUser})
    </insert>

    <select id="getLast" resultType="Long">
        select last_insert_id()
    </select>


<!--    수연-->
    <select id="findByCompanyNo" resultType="com.dq.aquaranth.dept.dto.DepartmentDTO">
        SELECT * FROM tbl_dept WHERE company_no = #{companyNo};
    </select>

<!--    종현-->
    <select id="findByUsername" resultType="com.dq.aquaranth.dept.dto.DeptDTO">
        select t.*
        from (with recursive findDept as (select to1.orga_no, to1.upper_orga_no, to1.orga_type
        from tbl_orga to1
        join tbl_emp_mapping tem on to1.orga_no = tem.orga_no
        join tbl_emp te on te.emp_no = tem.emp_no
        join tbl_dept_mapping m on to1.upper_orga_no = m.orga_no
        where te.username = #{username}
        and m.dept_main = true
        union all
        select to2.orga_no, to2.upper_orga_no, to2.orga_type
        from tbl_orga to2
        join findDept fd on fd.upper_orga_no = to2.orga_no)
        select f.orga_no, f.orga_type
        from findDept f) x
        join tbl_dept_mapping td on td.orga_no = x.orga_no
        join tbl_dept t on t.dept_no = td.dept_no
    </select>









    <select id="getSubDepth" resultType="com.dq.aquaranth.dept.dto.DeptDTO">
        <if test="depth eq 0">
            select 0 dept_no,
            null upper_dept_no,
            company_name dept_name,
            0 ord,
            0 depth,
            null last_dno,
            company_no
            from tbl_company
            where company_no = #{companyNo}
            union all
        </if>
        select dept_no, upper_dept_no, dept_name, ord, depth, last_dno, company_no
        from tbl_dept
        where (upper_dept_no = #{upperDeptNo} OR upper_dept_no is null )and depth = #{depth}
        and company_no = #{companyNo}
    </select>


</mapper>
